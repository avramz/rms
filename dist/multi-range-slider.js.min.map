{"version":3,"sources":["multi-range-slider.js"],"names":["$","Plugin","element","options","_updateSlides","_slider","$label","text","Math","round","value","me","normalizeSlides","onDrag","sliders","_getSlidesMaxValue","maxValue","find","opts","rangeSelector","each","min","this","attr","_error","parseInt","_updateMaxValues","totalLockSlidesAmount","i","__slider","isLocked","abs","getValue","minValue","initialMax","totalValue","extend","fn","MultiRangeSlider","defaults","sliderName","Slider","id","parseFloat","step","disabledClass","fillClass","rangeClass","handleClass","lockClass","useLock","onLock","onInit","config","_moveHandler","e","window","event","dragValue","pos","pageX","touches","clientX","max","document","body","scrollLeft","documentElement","$range","offset","left","outerWidth","isDown","setValue","$handle","css","$fill","cachePosition","_downHandler","preventDefault","attachEventListeners","_upHandler","addClass","removeClass","removeEventListeners","_resizeHandler","initHandle","_lockHandler","$element","on","toggleClass","class","append","isDisabled","$lock","errorName","errorMsg","err","Error","name","_inst","data","push","length","prototype","getSlideSum","excludeLockedSlides","sum","unlockedSlideSum","reset","slidersToDistribute","updateSlides","amountToDistribute","slides","slideNum","amount","amountPerSlider","floor","leftover","amountLeftover","slideLeftover","extra","newSliderValue","val","console","log","arguments","callback","addEventListener","attachEvent","removeEventListener","detachEvent","jQuery"],"mappings":"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","file":"multi-range-slider.js","sourcesContent":["/**\r\n * jQuery plugin for multi range sliders.\r\n * @author: Avramz\r\n * @param options\r\n * @returns {$.fn}\r\n */\r\n;(function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Light jQuery plugin wrapper.\r\n     * @param options\r\n     * @returns {Array} $.fn.MultiRangeSlider\r\n     * @constructor\r\n     */\r\n    $.fn.MultiRangeSlider = function (options) {\r\n        var _inst = [];\r\n\r\n        this.each(function () {\r\n            if (!$.data(this, 'rms_x')) {\r\n                _inst.push($.data(this, 'rms_x', new Plugin(this, options)));\r\n            }\r\n        });\r\n\r\n        return _inst.length > 1 ? _inst : _inst[0];\r\n    };\r\n\r\n    /**\r\n     * Plugin core logic.\r\n     * @param element\r\n     * @param options\r\n     * @constructor\r\n     */\r\n    function Plugin(element, options) {\r\n        var me = this,\r\n            opts = $.extend({}, $.fn.MultiRangeSlider.defaults, options),\r\n            sliders = {};\r\n\r\n        this.maxValue = _getSlidesMaxValue(element);\r\n        this.initialMax = this.maxValue;\r\n\r\n        $(element).find(opts.rangeSelector).each(function (i) {\r\n            var sliderName = $(this).attr('data-rms-name') || 'slide-' + i;\r\n\r\n            sliders[sliderName] = new Slider(this, {\r\n                id: sliderName,\r\n                value: parseFloat($(this).attr('data-rms-value')),\r\n                step: parseFloat($(this).attr('data-rms-step')),\r\n                minValue: parseFloat($(this).attr('data-rms-min')) || 0,\r\n                maxValue: parseFloat($(this).attr('data-rms-max')),\r\n                totalValue: me.maxValue,\r\n                disabledClass: opts.disabledClass,\r\n                fillClass: opts.fillClass,\r\n                rangeClass: opts.rangeClass,\r\n                handleClass: opts.handleClass,\r\n                lockClass: opts.lockClass,\r\n                useLock: opts.useLock,\r\n                onDrag: _updateSlides,\r\n                onLock: _updateMaxValues,\r\n                sliders: sliders\r\n            });\r\n        });\r\n\r\n        //expose sliders for manipulation\r\n        this.sliders = sliders;\r\n        this.onDrag = opts.onDrag;\r\n        this.onInit = opts.onInit;\r\n\r\n        this.onInit(sliders);\r\n\r\n        /**\r\n         * Handle slide movement logic.\r\n         * @param _slider\r\n         * @private\r\n         */\r\n        function _updateSlides(_slider) {\r\n            _slider.$label.text(Math.round(_slider.value));\r\n            me.normalizeSlides(_slider);\r\n\r\n            if (me.onDrag && typeof me.onDrag === 'function') {\r\n                me.onDrag(sliders);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Return slide value without minimum.\r\n         * @param element\r\n         * @returns {number}\r\n         * @private\r\n         */\r\n        function _getSlidesMaxValue(element) {\r\n            var maxValue = 0;\r\n\r\n            $(element).find(opts.rangeSelector).each(function () {\r\n                var min = $(this).attr('data-rms-min') || 0;\r\n\r\n\r\n                if (!$(this).attr('data-rms-max')) {\r\n                    _error('Plugin Error', 'Max value missing for slider element' + this);\r\n                }\r\n\r\n                if (parseInt($(this).attr('data-rms-max')) - min > maxValue) {\r\n                    maxValue = parseInt($(this).attr('data-rms-max')) - min;\r\n                }\r\n            });\r\n\r\n            return maxValue;\r\n        }\r\n\r\n        /**\r\n         * Updates maxValues for each slide when a slide is locked.\r\n         * @private\r\n         */\r\n        function _updateMaxValues() {\r\n            var totalLockSlidesAmount = 0;\r\n\r\n            $.each(me.sliders, function (i, __slider) {\r\n                if (__slider.isLocked) {\r\n                    totalLockSlidesAmount += Math.abs(__slider.getValue() - __slider.minValue);\r\n                }\r\n            });\r\n\r\n            me.maxValue = me.initialMax - totalLockSlidesAmount;\r\n\r\n            $.each(me.sliders, function (i, __slider) {\r\n                if (!__slider.isLocked) {\r\n                    if (__slider.maxValue > me.maxValue) {\r\n                        __slider.totalValue = __slider.minValue + me.maxValue;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return total sliders sum.\r\n     * @param excludeLockedSlides\r\n     * @returns {number}\r\n     */\r\n    Plugin.prototype.getSlideSum = function (excludeLockedSlides) {\r\n        var sum = 0,\r\n            unlockedSlideSum = 0;\r\n\r\n        $.each(this.sliders, function (i, __slider) {\r\n            if (!__slider.isLocked) {\r\n                unlockedSlideSum += Math.round(__slider.getValue() - __slider.minValue);\r\n            }\r\n            sum += Math.round(__slider.getValue() - __slider.minValue);\r\n\r\n        });\r\n\r\n        return excludeLockedSlides ? unlockedSlideSum : sum;\r\n    };\r\n\r\n    /**\r\n     * Resets the slides.\r\n     * @public\r\n     */\r\n    Plugin.prototype.reset = function () {\r\n        $.each(this.sliders, function (i, __slider) {\r\n            __slider.reset();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update other slides when other slide is being moved.\r\n     * @param _slider\r\n     * @public\r\n     */\r\n    Plugin.prototype.normalizeSlides = function (_slider) {\r\n        var slidersToDistribute = [];\r\n\r\n        $.each(this.sliders, function (i, __slider) {\r\n            if (!__slider.isDisabled && __slider.getValue() > __slider.minValue && __slider.id !== _slider.id && !__slider.isLocked) {\r\n                slidersToDistribute.push(__slider);\r\n            }\r\n        });\r\n\r\n        if (this.getSlideSum(true) > this.maxValue) {\r\n            this.updateSlides(Math.abs(this.getSlideSum(true) - this.maxValue), slidersToDistribute);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update other slides when other slide is being moved.\r\n     * @param amountToDistribute\r\n     * @param slides\r\n     * @public\r\n     */\r\n    Plugin.prototype.updateSlides = function (amountToDistribute, slides) {\r\n        var slideNum = slides.length,\r\n            amount = amountToDistribute,\r\n            amountPerSlider = Math.floor(amount / slideNum),\r\n            leftover = amount % slideNum,\r\n            amountLeftover = 0,\r\n            slideLeftover = [];\r\n\r\n        for (var i = 0, max = slideNum; i < max; i++) {\r\n            var extra = i < leftover ? 1 : 0,\r\n                newSliderValue = slides[i].getValue() - (amountPerSlider + extra);\r\n\r\n            if (newSliderValue < slides[i].minValue) {\r\n                slides[i].setValue(slides[i].minValue, false);\r\n                amountLeftover += Math.abs(newSliderValue - slides[i].minValue);\r\n            }\r\n            else {\r\n                slides[i].setValue(newSliderValue, false);\r\n                slideLeftover.push(slides[i]);\r\n            }\r\n        }\r\n\r\n        if (amountLeftover > 0) {\r\n            this.updateSlides(amountLeftover, slideLeftover);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Slider core logic.\r\n     * @param element\r\n     * @param config\r\n     * @constructor\r\n     */\r\n    function Slider(element, config) {\r\n        var me = this;\r\n\r\n        this.id = config.id;\r\n\r\n        //Dom\r\n        this.document = document.documentElement;\r\n        this.$element = $(element);\r\n        this.$range = $('<div/>', {class: 'rms-slide-track'});\r\n        this.$fill = $('<span/>', {class: 'rms-slide-fill'});\r\n        this.$handle = $('<span/>', {class: 'rms-slide-handle ' + config.handleClass});\r\n        this.$label = $(element).find('[data-rms-label]');\r\n\r\n        //insert into DOM\r\n        this.$range.append(this.$fill, this.$handle);\r\n        this.$element.addClass('rms-slide').append(this.$range);\r\n\r\n        this.isDown = false; //is mouse down in progress\r\n        this.isDisabled = false; //is mouse down in progress\r\n        this.isLocked = false; //is slider locked\r\n\r\n        // expose properties\r\n        this.onDrag = config.onDrag;\r\n        this.onLock = config.onLock;\r\n        this.step = config.step ? config.step : 1;\r\n        this.minValue = config.minValue;\r\n        this.maxValue = config.maxValue;\r\n        this.value = config.value ? config.value : this.minValue;\r\n        this.totalValue = config.totalValue + this.maxValue;\r\n        this.cachePosition = null;\r\n\r\n        // attach mouse down listeners\r\n        this.attachEventListeners(this.$range[0], 'mousedown', _downHandler);\r\n        this.attachEventListeners(this.$range[0], 'touchstart', _downHandler);\r\n        this.attachEventListeners(this.$range[0], 'pointerdown', _downHandler);\r\n\r\n        this.attachEventListeners(window, 'resize', _resizeHandler);\r\n\r\n        if (config.useLock) {\r\n            this.$lock = $('<span/>', {class: 'rms-slide-lock ' + config.lockClass});\r\n            this.$element.append(this.$lock);\r\n            _lockHandler(this.$lock);\r\n        }\r\n\r\n        /**\r\n         * Handle movement.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _moveHandler(e) {\r\n            e = e || window.event;\r\n\r\n            var pos = e.pageX || e.touches[0].clientX,\r\n                dragValue,\r\n                max = me.maxValue > me.totalValue ? me.totalValue : me.maxValue;\r\n\r\n            if (!pos) {\r\n                pos = !e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            }\r\n\r\n            dragValue = Math.round(((pos - me.$range.offset().left) * me.maxValue / me.$range.outerWidth()));\r\n\r\n            if (me.isDown && pos >= me.$range.offset().left && pos <= (me.$range.offset().left + me.$range.outerWidth())) {\r\n                if (dragValue > max) {\r\n                    me.setValue(max);\r\n                    return;\r\n                }\r\n                else if (dragValue < me.minValue) {\r\n                    me.setValue(me.minValue);\r\n                    return;\r\n                }\r\n\r\n                me.$handle.css('left', Math.round((pos - me.$range.offset().left - (me.$handle.outerWidth() / 2))) + 'px');\r\n                me.$fill.css('width', (pos - me.$range.offset().left) + 'px');\r\n                me.cachePosition = dragValue;\r\n                me.value = dragValue;\r\n                me.onDrag(me);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Handle mouse down. Add move/up listeners only when this handler is active, increasing performance by removing them on @upHandler.\r\n         * @param e\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        function _downHandler(e) {\r\n            e.preventDefault();\r\n            // attach move listeners while move is active\r\n            me.attachEventListeners(document, 'mousemove', _moveHandler);\r\n            me.attachEventListeners(document, 'touchmove', _moveHandler);\r\n            me.attachEventListeners(document, 'pointermove', _moveHandler);\r\n\r\n            me.attachEventListeners(document, 'mouseup', _upHandler);\r\n            me.attachEventListeners(document, 'touchend', _upHandler);\r\n            me.attachEventListeners(document, 'pointerup', _upHandler);\r\n\r\n\r\n            $(me.document).addClass('rms-select-disable');\r\n            me.isDown = true;\r\n            _moveHandler(e);\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Handle mouse up.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _upHandler(e) {\r\n            e.preventDefault();\r\n            $(me.document).removeClass('rms-select-disable');\r\n\r\n            //remove move listeners\r\n            me.removeEventListeners(document, 'mousemove', _moveHandler);\r\n            me.removeEventListeners(document, 'touchmove', _moveHandler);\r\n            me.removeEventListeners(document, 'pointermove', _moveHandler);\r\n\r\n            me.removeEventListeners(document, 'mouseup', _upHandler);\r\n            me.removeEventListeners(document, 'touchend', _upHandler);\r\n            me.removeEventListeners(document, 'pointerup', _upHandler);\r\n            me.isDown = false;\r\n        }\r\n\r\n        /**\r\n         * Handle window resize.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _resizeHandler(e) {\r\n            e.preventDefault();\r\n            me.initHandle();\r\n        }\r\n\r\n        /**\r\n         * Handles slide lock.\r\n         * @param $element\r\n         * @private\r\n         */\r\n        function _lockHandler($element) {\r\n            $element.on('click', function (e) {\r\n                e.preventDefault();\r\n                me.$element.toggleClass('disabled');\r\n                me.isLocked = !me.isLocked;\r\n                me.onLock();\r\n            });\r\n        }\r\n\r\n        //initialize the slider.\r\n        this.initHandle();\r\n    }\r\n\r\n    /**\r\n     * Initialize the slider.\r\n     * @public\r\n     */\r\n    Slider.prototype.initHandle = function () {\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n        this.onDrag(this);\r\n    };\r\n\r\n    /**\r\n     * Reset the slider.\r\n     * @public\r\n     */\r\n    Slider.prototype.reset = function () {\r\n        this.value = this.minValue;\r\n        this.$element.removeClass('disabled');\r\n        this.isLocked = false;\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n        this.onDrag(this);\r\n    };\r\n\r\n    /**\r\n     * Set value for the given slider.\r\n     * @param val\r\n     * @param updateSlides\r\n     * @public\r\n     */\r\n    Slider.prototype.setValue = function (val, updateSlides) {\r\n        var max = this.maxValue > this.totalValue ? this.totalValue : this.maxValue;\r\n        this.value = val;\r\n\r\n        if (val >= max) {\r\n            this.value = max;\r\n        }\r\n        else if (val <= this.minValue) {\r\n            this.value = this.minValue;\r\n        }\r\n\r\n        if (this.isLocked) {\r\n            return console.log('Unable to change value, slide is locked.');\r\n        }\r\n\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n        this.$label.text(Math.round(this.value));\r\n\r\n        if (arguments.length != 2) {\r\n            this.onDrag(this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get slider value\r\n     * @returns {*}\r\n     * @public\r\n     */\r\n    Slider.prototype.getValue = function () {\r\n        return this.value;\r\n    };\r\n\r\n    /**\r\n     * Attach event listeners.\r\n     * @param element\r\n     * @param event\r\n     * @param callback\r\n     * @public\r\n     */\r\n    Slider.prototype.attachEventListeners = function (element, event, callback) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(event, callback, false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent('on' + event, callback);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove event listeners.\r\n     * @param element\r\n     * @param event\r\n     * @param callback\r\n     * @public\r\n     */\r\n    Slider.prototype.removeEventListeners = function (element, event, callback) {\r\n        if (element.removeEventListener) {\r\n            element.removeEventListener(event, callback);\r\n        } else if (element.detachEvent) {\r\n            element.detachEvent('on' + event, callback);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Custom error handler\r\n     * @param errorName\r\n     * @param errorMsg\r\n     * @private\r\n     */\r\n    function _error(errorName, errorMsg) {\r\n        var err = new Error(errorMsg);\r\n        err.name = errorName;\r\n\r\n        throw err;\r\n    }\r\n\r\n    /**\r\n     * Plugin defaults.\r\n     * @type {{rangeSelector: string, disabledClass: string, fillClass: string, rangeClass: string, handleClass: string, lockClass: string, useLock: boolean, onInit: onInit, onDrag: onDrag}}\r\n     */\r\n\r\n\r\n    $.fn.MultiRangeSlider.defaults = {\r\n        rangeSelector: '.slide',\r\n        disabledClass: 'disabled',\r\n        fillClass: 'rms-slide-fill',\r\n        rangeClass: 'rms-slide',\r\n        handleClass: '',\r\n        lockClass: '',\r\n        useLock: true,\r\n        onInit: function () {\r\n        },\r\n        onDrag: function () {\r\n        }\r\n    };\r\n\r\n}(jQuery));"],"sourceRoot":"/source/"}
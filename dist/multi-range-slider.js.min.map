{"version":3,"sources":["multi-range-slider.js"],"names":["$","Plugin","element","options","_onDragEnd","_slider","me","onDragEnd","_setMode","mode","_updateSlides","$label","text","Math","round","value","normalizeSlides","onDrag","_getSlidesMaxValue","maxValue","find","opts","rangeSelector","each","min","this","attr","_error","parseInt","_updateMaxValues","totalLockSlidesAmount","sliders","i","__slider","isLocked","abs","getValue","minValue","initialMax","totalValue","extend","fn","MultiRangeSlider","defaults","setMode","sliderName","Slider","id","parseFloat","step","disabledClass","fillClass","rangeClass","handleClass","lockClass","useLock","onLock","onInit","config","_moveHandler","e","window","event","dragValue","pos","pageX","touches","clientX","max","document","body","scrollLeft","documentElement","$range","offset","left","outerWidth","isDown","setValue","$handle","css","$fill","cachePosition","_downHandler","preventDefault","attachEventListeners","_upHandler","addClass","removeClass","removeEventListeners","_resizeHandler","initHandle","_lockHandler","$element","on","toggleClass","class","append","isDisabled","$lock","errorName","errorMsg","err","Error","name","_inst","_plugin","data","push","length","prototype","getSlideSum","excludeLockedSlides","sum","unlockedSlideSum","reset","slidersToDistribute","updateSlides","amountToDistribute","slides","slideNum","amount","amountPerSlider","floor","leftover","amountLeftover","slideLeftover","extra","newSliderValue","val","console","log","arguments","callback","addEventListener","attachEvent","removeEventListener","detachEvent","jQuery"],"mappings":"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","file":"multi-range-slider.js","sourcesContent":["/**\r\n * jQuery plugin for multi range sliders.\r\n * @author: Avramz\r\n * @param options\r\n * @returns {$.fn}\r\n */\r\n;(function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Light jQuery plugin wrapper.\r\n     * @param options\r\n     * @returns {Array} $.fn.MultiRangeSlider\r\n     * @constructor\r\n     */\r\n    $.fn.MultiRangeSlider = function (options) {\r\n        var _inst = [];\r\n\r\n        $.each(this, function (i, _plugin) {\r\n            if (!$.data(_plugin, 'rms_x')) {\r\n                _inst.push($.data(_plugin, 'rms_x', new Plugin(_plugin, options)));\r\n            }\r\n        });\r\n\r\n        return _inst.length > 1 ? _inst : _inst[0];\r\n    };\r\n\r\n    /**\r\n     * Plugin core logic.\r\n     * @param element\r\n     * @param options\r\n     * @constructor\r\n     */\r\n    function Plugin(element, options) {\r\n        var me = this,\r\n            opts = $.extend({}, $.fn.MultiRangeSlider.defaults, options),\r\n            sliders = {};\r\n\r\n        this.maxValue = _getSlidesMaxValue(element);\r\n        this.initialMax = this.maxValue;\r\n        this.setMode = _setMode;\r\n        this.mode = '>';\r\n\r\n        $(element).find(opts.rangeSelector).each(function (i) {\r\n            var sliderName = $(this).attr('data-rms-name') || 'slide-' + i;\r\n\r\n            sliders[sliderName] = new Slider(this, {\r\n                id: sliderName,\r\n                value: parseFloat($(this).attr('data-rms-value')),\r\n                step: parseFloat($(this).attr('data-rms-step')),\r\n                minValue: parseFloat($(this).attr('data-rms-min')) || 0,\r\n                maxValue: parseFloat($(this).attr('data-rms-max')),\r\n                totalValue: me.maxValue,\r\n                disabledClass: opts.disabledClass,\r\n                fillClass: opts.fillClass,\r\n                rangeClass: opts.rangeClass,\r\n                handleClass: opts.handleClass,\r\n                lockClass: opts.lockClass,\r\n                useLock: opts.useLock,\r\n                onDrag: _updateSlides,\r\n                onDragEnd: _onDragEnd,\r\n                onLock: _updateMaxValues,\r\n                sliders: sliders\r\n            });\r\n        });\r\n\r\n        //expose sliders for manipulation\r\n        this.sliders = sliders;\r\n        this.onDrag = opts.onDrag;\r\n        this.onDragEnd = opts.onDragEnd;\r\n        this.onInit = opts.onInit;\r\n        this.onInit(me);\r\n\r\n        /**\r\n         * Return slider as all sliders onDragEnd.\r\n         * @param _slider\r\n         * @private\r\n         */\r\n        function _onDragEnd(_slider) {\r\n            if (me.onDragEnd && typeof me.onDragEnd === 'function') {\r\n                me.onDragEnd(_slider, me);\r\n            }\r\n        }\r\n\r\n        function _setMode(mode) {\r\n            me.mode = mode;\r\n        }\r\n\r\n        /**\r\n         * Handle slide movement logic.\r\n         * @param _slider\r\n         * @private\r\n         */\r\n        function _updateSlides(_slider) {\r\n            _slider.$label.text(Math.round(_slider.value));\r\n            me.normalizeSlides(_slider);\r\n\r\n            if (me.onDrag && typeof me.onDrag === 'function') {\r\n                me.onDrag(_slider, me);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Return slide value without minimum.\r\n         * @param element\r\n         * @returns {number}\r\n         * @private\r\n         */\r\n        function _getSlidesMaxValue(element) {\r\n            var maxValue = 0;\r\n\r\n            $(element).find(opts.rangeSelector).each(function () {\r\n                var min = $(this).attr('data-rms-min') || 0;\r\n\r\n\r\n                if (!$(this).attr('data-rms-max')) {\r\n                    _error('Plugin Error', 'Max value missing for slider element' + this);\r\n                }\r\n\r\n                if (parseInt($(this).attr('data-rms-max')) - min > maxValue) {\r\n                    maxValue = parseInt($(this).attr('data-rms-max')) - min;\r\n                }\r\n            });\r\n\r\n            return maxValue;\r\n        }\r\n\r\n        /**\r\n         * Updates maxValues for each slide when a slide is locked.\r\n         * @private\r\n         */\r\n        function _updateMaxValues() {\r\n            var totalLockSlidesAmount = 0;\r\n\r\n            $.each(me.sliders, function (i, __slider) {\r\n                if (__slider.isLocked) {\r\n                    totalLockSlidesAmount += Math.abs(__slider.getValue() - __slider.minValue);\r\n                }\r\n            });\r\n\r\n            me.maxValue = me.initialMax - totalLockSlidesAmount;\r\n\r\n            $.each(me.sliders, function (i, __slider) {\r\n                if (!__slider.isLocked) {\r\n                    __slider.totalValue = __slider.minValue + me.maxValue;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return total sliders sum.\r\n     * @param excludeLockedSlides\r\n     * @returns {number}\r\n     */\r\n    Plugin.prototype.getSlideSum = function (excludeLockedSlides) {\r\n        var sum = 0,\r\n            unlockedSlideSum = 0;\r\n\r\n        $.each(this.sliders, function (i, __slider) {\r\n            if (!__slider.isLocked) {\r\n                unlockedSlideSum += Math.round(__slider.getValue() - __slider.minValue);\r\n            }\r\n            sum += Math.round(__slider.getValue() - __slider.minValue);\r\n\r\n        });\r\n\r\n        return excludeLockedSlides ? unlockedSlideSum : sum;\r\n    };\r\n\r\n    /**\r\n     * Resets the slides.\r\n     * @public\r\n     */\r\n    Plugin.prototype.reset = function () {\r\n        $.each(this.sliders, function (i, __slider) {\r\n            __slider.reset();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update other slides when other slide is being moved.\r\n     * @param _slider\r\n     * @public\r\n     */\r\n    Plugin.prototype.normalizeSlides = function (_slider) {\r\n        var slidersToDistribute = [];\r\n\r\n        $.each(this.sliders, function (i, __slider) {\r\n            if (!__slider.isDisabled && __slider.getValue() > __slider.minValue && __slider.id !== _slider.id && !__slider.isLocked) {\r\n                slidersToDistribute.push(__slider);\r\n            }\r\n        });\r\n\r\n        if (this.mode === '>') {\r\n            if (this.getSlideSum(true) > this.maxValue) {\r\n                this.updateSlides(Math.abs(this.getSlideSum(true) - this.maxValue), slidersToDistribute);\r\n            }\r\n        }\r\n        else {\r\n            if (this.getSlideSum(true) !== this.maxValue) {\r\n                this.updateSlides(Math.abs(this.getSlideSum(true) - this.maxValue), slidersToDistribute);\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * Update other slides when other slide is being moved.\r\n     * @param amountToDistribute\r\n     * @param slides\r\n     * @public\r\n     */\r\n    Plugin.prototype.updateSlides = function (amountToDistribute, slides) {\r\n        var slideNum = slides.length,\r\n            amount = amountToDistribute,\r\n            amountPerSlider = Math.floor(amount / slideNum),\r\n            leftover = amount % slideNum,\r\n            amountLeftover = 0,\r\n            slideLeftover = [];\r\n\r\n        for (var i = 0, max = slideNum; i < max; i++) {\r\n            var extra = i < leftover ? 1 : 0,\r\n                newSliderValue = slides[i].getValue() - (amountPerSlider + extra);\r\n\r\n            if (newSliderValue < slides[i].minValue) {\r\n                slides[i].setValue(slides[i].minValue, false);\r\n                amountLeftover += Math.abs(newSliderValue - slides[i].minValue);\r\n            }\r\n            else {\r\n                slides[i].setValue(newSliderValue, false);\r\n                slideLeftover.push(slides[i]);\r\n            }\r\n        }\r\n\r\n        if (amountLeftover > 0) {\r\n            this.updateSlides(amountLeftover, slideLeftover);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Slider core logic.\r\n     * @param element\r\n     * @param config\r\n     * @constructor\r\n     */\r\n    function Slider(element, config) {\r\n        var me = this;\r\n\r\n        this.id = config.id;\r\n\r\n        //Dom\r\n        this.document = document.documentElement;\r\n        this.$element = $(element);\r\n        this.$range = $('<div/>', {class: 'rms-slide-track'});\r\n        this.$fill = $('<span/>', {class: 'rms-slide-fill'});\r\n        this.$handle = $('<span/>', {class: 'rms-slide-handle ' + config.handleClass});\r\n        this.$label = $(element).find('[data-rms-label]');\r\n\r\n        //insert into DOM\r\n        this.$range.append(this.$fill, this.$handle);\r\n        this.$element.addClass('rms-slide').append(this.$range);\r\n\r\n        this.isDown = false; //is mouse down in progress\r\n        this.isDisabled = false; //is mouse down in progress\r\n        this.isLocked = false; //is slider locked\r\n\r\n        // expose properties\r\n        this.onDrag = config.onDrag;\r\n        this.onDragEnd = config.onDragEnd;\r\n        this.onLock = config.onLock;\r\n        this.step = config.step ? config.step : 1;\r\n        this.minValue = config.minValue;\r\n        this.maxValue = config.maxValue;\r\n        this.value = config.value ? config.value : this.minValue;\r\n        this.totalValue = config.totalValue + this.maxValue;\r\n        this.cachePosition = null;\r\n\r\n        // attach mouse down listeners\r\n        this.attachEventListeners(this.$range[0], 'mousedown', _downHandler);\r\n        this.attachEventListeners(this.$range[0], 'touchstart', _downHandler);\r\n        this.attachEventListeners(this.$range[0], 'pointerdown', _downHandler);\r\n\r\n        this.attachEventListeners(window, 'resize', _resizeHandler);\r\n\r\n        if (config.useLock) {\r\n            this.$lock = $('<span/>', {class: 'rms-slide-lock ' + config.lockClass});\r\n            this.$element.append(this.$lock);\r\n            _lockHandler(this.$lock);\r\n        }\r\n\r\n        /**\r\n         * Handle movement.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _moveHandler(e) {\r\n            e = e || window.event;\r\n\r\n            var pos = e.pageX || e.touches[0].clientX,\r\n                dragValue,\r\n                max = me.maxValue > me.totalValue ? me.totalValue : me.maxValue;\r\n\r\n            if (!pos) {\r\n                pos = !e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            }\r\n\r\n            dragValue = Math.round(((pos - me.$range.offset().left) * me.maxValue / me.$range.outerWidth()));\r\n\r\n            if (me.isDown) {\r\n                if (dragValue > max) {\r\n                    me.setValue(max);\r\n                    return;\r\n                }\r\n                else if (dragValue < me.minValue) {\r\n                    me.setValue(me.minValue);\r\n                    return;\r\n                }\r\n\r\n                me.$handle.css('left', Math.round((pos - me.$range.offset().left - (me.$handle.outerWidth() / 2))) + 'px');\r\n                me.$fill.css('width', (pos - me.$range.offset().left) + 'px');\r\n                me.cachePosition = dragValue;\r\n                me.value = dragValue;\r\n                me.onDrag(me);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Handle mouse down. Add move/up listeners only when this handler is active, increasing performance by removing them on @upHandler.\r\n         * @param e\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        function _downHandler(e) {\r\n            e.preventDefault();\r\n            // attach move listeners while move is active\r\n            me.attachEventListeners(document, 'mousemove', _moveHandler);\r\n            me.attachEventListeners(document, 'touchmove', _moveHandler);\r\n            me.attachEventListeners(document, 'pointermove', _moveHandler);\r\n\r\n            me.attachEventListeners(document, 'mouseup', _upHandler);\r\n            me.attachEventListeners(document, 'touchend', _upHandler);\r\n            me.attachEventListeners(document, 'pointerup', _upHandler);\r\n\r\n\r\n            $(me.document).addClass('rms-select-disable');\r\n            me.isDown = true;\r\n            _moveHandler(e);\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Handle mouse up.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _upHandler(e) {\r\n            e.preventDefault();\r\n            $(me.document).removeClass('rms-select-disable');\r\n\r\n            //remove move listeners\r\n            me.removeEventListeners(document, 'mousemove', _moveHandler);\r\n            me.removeEventListeners(document, 'touchmove', _moveHandler);\r\n            me.removeEventListeners(document, 'pointermove', _moveHandler);\r\n\r\n            me.removeEventListeners(document, 'mouseup', _upHandler);\r\n            me.removeEventListeners(document, 'touchend', _upHandler);\r\n            me.removeEventListeners(document, 'pointerup', _upHandler);\r\n            me.isDown = false;\r\n            me.onDragEnd(me);\r\n        }\r\n\r\n        /**\r\n         * Handle window resize.\r\n         * @param e\r\n         * @private\r\n         */\r\n        function _resizeHandler(e) {\r\n            e.preventDefault();\r\n            me.initHandle();\r\n        }\r\n\r\n        /**\r\n         * Handles slide lock.\r\n         * @param $element\r\n         * @private\r\n         */\r\n        function _lockHandler($element) {\r\n            $element.on('click', function (e) {\r\n                e.preventDefault();\r\n                me.$element.toggleClass('disabled');\r\n                me.isLocked = !me.isLocked;\r\n                me.onLock();\r\n            });\r\n        }\r\n\r\n        //initialize the slider.\r\n        this.initHandle();\r\n    }\r\n\r\n    /**\r\n     * Initialize the slider.\r\n     * @public\r\n     */\r\n    Slider.prototype.initHandle = function () {\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n//        this.onDrag(this);\r\n    };\r\n\r\n    /**\r\n     * Reset the slider.\r\n     * @public\r\n     */\r\n    Slider.prototype.reset = function () {\r\n        this.value = this.minValue;\r\n        this.$element.removeClass('disabled');\r\n        this.isLocked = false;\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n        this.onDrag(this);\r\n    };\r\n\r\n    /**\r\n     * Set value for the given slider.\r\n     * @param val\r\n     * @param updateSlides\r\n     * @public\r\n     */\r\n    Slider.prototype.setValue = function (val, updateSlides) {\r\n        var max = this.maxValue > this.totalValue ? this.totalValue : this.maxValue;\r\n        this.value = val;\r\n\r\n        if (val >= max) {\r\n            this.value = max;\r\n        }\r\n        else if (val <= this.minValue) {\r\n            this.value = this.minValue;\r\n        }\r\n\r\n        if (this.isLocked) {\r\n            return console.log('Unable to change value, slide is locked.');\r\n        }\r\n\r\n        this.cachePosition = Math.round((this.value * this.$range.outerWidth()) / this.maxValue);\r\n        this.$handle.css('left', Math.round((this.cachePosition - (this.$handle.outerWidth() / 2))) + 'px');\r\n        this.$fill.css('width', this.cachePosition + 'px');\r\n        this.$label.text(Math.round(this.value));\r\n\r\n        if (arguments.length != 2) {\r\n            this.onDrag(this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get slider value\r\n     * @returns {*}\r\n     * @public\r\n     */\r\n    Slider.prototype.getValue = function () {\r\n        return this.value;\r\n    };\r\n\r\n    /**\r\n     * Attach event listeners.\r\n     * @param element\r\n     * @param event\r\n     * @param callback\r\n     * @public\r\n     */\r\n    Slider.prototype.attachEventListeners = function (element, event, callback) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(event, callback, false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent('on' + event, callback);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove event listeners.\r\n     * @param element\r\n     * @param event\r\n     * @param callback\r\n     * @public\r\n     */\r\n    Slider.prototype.removeEventListeners = function (element, event, callback) {\r\n        if (element.removeEventListener) {\r\n            element.removeEventListener(event, callback);\r\n        } else if (element.detachEvent) {\r\n            element.detachEvent('on' + event, callback);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Custom error handler\r\n     * @param errorName\r\n     * @param errorMsg\r\n     * @private\r\n     */\r\n    function _error(errorName, errorMsg) {\r\n        var err = new Error(errorMsg);\r\n        err.name = errorName;\r\n\r\n        throw err;\r\n    }\r\n\r\n    /**\r\n     * Plugin defaults.\r\n     * @type {{rangeSelector: string, disabledClass: string, fillClass: string, rangeClass: string, handleClass: string, lockClass: string, useLock: boolean, onInit: onInit, onDrag: onDrag}}\r\n     */\r\n\r\n\r\n    $.fn.MultiRangeSlider.defaults = {\r\n        rangeSelector: '.slide',\r\n        disabledClass: 'disabled',\r\n        fillClass: 'rms-slide-fill',\r\n        rangeClass: 'rms-slide',\r\n        handleClass: '',\r\n        lockClass: '',\r\n        useLock: true,\r\n        onInit: function () {\r\n        },\r\n        onDrag: function () {\r\n        },\r\n        onDragEnd: function () {\r\n        }\r\n    };\r\n\r\n}(jQuery));"],"sourceRoot":"/source/"}